from ff import *


CONSTS_FILE = 'FixTheFence/consts.h'
SOURCE_FILE = 'FixTheFence/FixTheFence.cpp'
SUBMISSION_FILE = 'submission.cpp'


with open(CONSTS_FILE, 'w') as consts:
    for i in range(1, 6+1):
        prop = Propagator(i)
        assert all(t is None for t in prop.index_topo[0])
        print>>consts, 'const int NUM_TOPOS_%d = %d;' % (prop.h, len(prop.index_topo))
        print>>consts, 'const unsigned topo_bits_%d[] = {' % prop.h
        print>>consts, ', '.join(map(str, prop.topo_bits))
        print>>consts, '};'

        print>>consts, 'const char *transition_data_%d[] = {' % prop.h
        for i in range(len(prop.index_topo)):
            for gate_pair in GATE_PAIRS:
                ts = prop.transition_table[i].get(gate_pair, {})
                s = ''
                for xor_bits, new_topo in ts.items():
                    assert new_topo < 64*64
                    assert bool(xor_bits & 1) == (gate_pair[0] is not None)
                    assert bool(xor_bits & (2 << prop.h)) == (gate_pair[1] is not None)
                    xor_bits &= ~1
                    xor_bits &= ~(2 << prop.h)
                    xor_bits //= 2
                    assert xor_bits < 64
                    s += chr(xor_bits+40)
                    s += chr(new_topo//64+40)+chr(new_topo%64+40)
                print>>consts, '"%s",' % s.replace('\\', '\\\\')
        print>>consts, '""};'


text = open(SOURCE_FILE).read()
text = text.replace('int main', 'int main1')
text = text.replace('#include "consts.h"', open(CONSTS_FILE).read())
text = '/* ff.py: \n' + open('ff.py').read() + '*'+'/\n' + text
text = '/* generated by this script \n' + open(__file__).read() + '*'+'/\n' + text

with open(SUBMISSION_FILE, 'w') as submission:
    submission.write(text)
